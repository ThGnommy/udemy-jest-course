[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Contentinfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"descriotion\" /> Img\n      <input type=\"checkbox\" /> checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> text\n      <li>ListItem</li>\n      <ul>list</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"rrj9k"},{"content":"test('can find element by role', () => {\n  render(<RoleExample />)\n\n  const roles = [\n    \"link\",\n    \"button\",\n    \"contentinfo\",\n    \"banner\", \n    \"img\",\n    \"checkbox\",\n    \"spinbutton\",\n    \"radio\",\n    \"textbox\",\n    \"listitem\",\n    \"list\"\n  ]\n\n  for (let role of roles) {\n    const el = screen.getByRole(role)\n    expect(el).toBeInTheDocument()\n  }\n})","type":"code","id":"65mvy"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction AccessibleName() {\n  return (\n    <div>\n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\n\nrender(<AccessibleName />);","type":"code","id":"p8uuk"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />)\n\n  const submitButton = screen.getByRole(\"button\", {name: /submit/i})\n  const cancelButton = screen.getByRole(\"button\", {name: /cancel/i})\n\n  expect(submitButton).toBeInTheDocument()\n  expect(cancelButton).toBeInTheDocument()\n\n})","type":"code","id":"sebtt"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction MoreNames() {\n  return (\n    <div>\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" />\n\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\" />\n    </div>\n  );\n}\n\nrender(<MoreNames />);","type":"code","id":"fggfe"},{"content":"test('shows an email and search input', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', { name: /email/i });\n  const searchInput = screen.getByRole('textbox', { name: /search/i });\n\n  expect(emailInput).toBeInTheDocument()\n  expect(searchInput).toBeInTheDocument()\n\n});","type":"code","id":"ici3a"},{"content":"import { render, screen } from '@testing-library/react';\n\nfunction IconsButtons() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n\n      <button aria-label=\"sign out\">\n        <svg />\n      </button>\n    </div>\n  );\n}\n\nrender(<IconsButtons />);","type":"code","id":"8t2w1"},{"content":"test('find element based on label', () => {\n  render(<IconsButtons />);\n\n  const buttonOne = screen.getByRole('button', {name: /sign in/i})\n  const buttonTwo = screen.getByRole('button', {name: /sign out/i})\n\n  expect(buttonOne).toBeInTheDocument()\n  expect(buttonTwo).toBeInTheDocument()\n\n});","type":"code","id":"uj00b"}]